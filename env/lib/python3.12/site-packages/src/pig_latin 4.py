import re


def pig_latin(text):
    def translate(word):
        vowels = "aeiou"
        if word[0].lower() in vowels:
            return word + "way"
        else:
            consonants = ""
            for letter in word:
                if letter.lower() not in vowels:
                    consonants += letter
                else:
                    break
            return word[len(consonants) :] + consonants.lower() + "ay"

    def translate_with_punctuation(word):
        match = re.match(r"([a-zA-Z']+)([^a-zA-Z]*)", word)
        if match:
            base_word = match.group(1)
            punctuation = match.group(2)
            translated_word = translate(base_word)

            # Handle capitalization
            if base_word[0].isupper():
                translated_word = translated_word.capitalize()

            return translated_word + punctuation
        return word

    words = re.findall(r"[\w']+|[^\w\s]", text)
    translated_words = [translate_with_punctuation(word) for word in words]
    result = ""

    # Reconstruct the text with proper spacing
    for i, word in enumerate(translated_words):
        if (
            i > 0
            and re.match(r"[\w']", word)
            and re.match(r"[\w']", translated_words[i - 1])
        ):
            result += " "
        result += word

    return result
